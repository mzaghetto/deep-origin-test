version: '3.8'

services:
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: url_shortener
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      args:
        - DATABASE_URL=postgresql://postgres:postgres@db:5432/url_shortener
    ports:
      - "40001:40001"
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/url_shortener?schema=public"
      JWT_SECRET: "secret-here"
      PORT: "40001"
      NODE_ENV: "development"
      FRONTEND_URL_NOT_FOUND: "http://frontend:30001/404"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:40001/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    build:
      context: ./frontend
      target: dev
    ports:
      - "30001:3000"
    environment:
      NEXT_PUBLIC_API_URL: "http://backend:40001"
      NODE_ENV: "development"
      API_URL: http://backend:40001
      PORT: "3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
